local Library = {}

function Library.CreateMain()
	local ScreenGui = Instance.new("ScreenGui")
	local LiboHub = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	local UICorner_2 = Instance.new("UICorner")
	local UIGridLayout = Instance.new("UIGridLayout")
	
	ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	LiboHub.Name = "LiboHub"
	LiboHub.Parent = ScreenGui
	LiboHub.BackgroundColor3 = Color3.fromRGB(72, 72, 72)
	LiboHub.BorderSizePixel = 0
	LiboHub.Position = UDim2.new(0.247104242, 0, 0.166962698, 0)
	LiboHub.Size = UDim2.new(0, 516, 0, 375)
	LiboHub.Visible = false
	
	UIGridLayout.Parent = ScrollingFrame
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	
	UICorner.Parent = LiboHub

	ScrollingFrame.Parent = LiboHub
	ScrollingFrame.Active = true
	ScrollingFrame.BackgroundColor3 = Color3.fromRGB(113, 113, 113)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0.0523255803, 0, 0.0453333333, 0)
	ScrollingFrame.Size = UDim2.new(0, 465, 0, 324)
	ScrollingFrame.ScrollBarThickness = 13

	UIGridLayout.Parent = ScrollingFrame
	UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
	
	local GamerLibrary = {}
	
	function GamerLibrary:Button(name, callback)
		local TextButton = Instance.new("TextButton")
		
		local TextButton = Instance.new("TextButton")
		
		TextButton.Name = name
		TextButton.Text = name
		TextButton.Parent = ScrollingFrame
		TextButton.BackgroundColor3 = Color3.fromRGB(77, 77, 77)
		TextButton.Size = UDim2.new(0, 85, 0, 71)
		TextButton.Font = Enum.Font.Antique
		TextButton.Text = "Print"
		TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextButton.TextScaled = true
		TextButton.TextSize = 14.000
		TextButton.TextWrapped = true
		
		ScrollingFrame:FindFirstChild(name).MouseButton1Click:connect(callback)
		
		UICorner_2.Parent = TextButton
	end
	
	return GamerLibrary
	
end

return Library


-- Scripts:

local function TLDQQML_fake_script() -- ScrollingFrame.AutoScale 
	local script = Instance.new('LocalScript', ScrollingFrame)

	game:GetService("RunService").RenderStepped:Connect(function()
		script.Parent.CanvasSize = UDim2.new(0,0,0,script.Parent.UIGridLayout.AbsoluteContentSize.Y)
	end)
end
coroutine.wrap(TLDQQML_fake_script)()
local function WVMH_fake_script() -- LiboHub.Smooth GUI Dragging 
	local script = Instance.new('LocalScript', LiboHub)

	local UserInputService = game:GetService("UserInputService")
	local runService = (game:GetService("RunService"));
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	function Lerp(a, b, m)
		return a + (b - a) * m
	end;
	
	local lastMousePos
	local lastGoalPos
	local DRAG_SPEED = (8); -- // The speed of the UI darg.
	function Update(dt)
		if not (startPos) then return end;
		if not (dragging) and (lastGoalPos) then
			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
			return 
		end;
	
		local delta = (lastMousePos - UserInputService:GetMouseLocation())
		local xGoal = (startPos.X.Offset - delta.X);
		local yGoal = (startPos.Y.Offset - delta.Y);
		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
	end;
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			lastMousePos = UserInputService:GetMouseLocation()
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	runService.Heartbeat:Connect(Update)
end
coroutine.wrap(WVMH_fake_script)()
